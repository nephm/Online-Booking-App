# Maven
# Build your Java project and run tests with Apache Maven.

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

steps:

# Clean and compile
- task: Maven@4
  displayName: 'Maven clean and compile'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.21'
    jdkArchitectureOption: 'x64'
    goals: 'clean compile'
    options: '-e'

# Run integration tests
- task: Maven@4
  displayName: 'Run Integration Tests'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.21'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'test'
    options: '-e -Dspring.profiles.active=test'
  continueOnError: true

# Package the application without running tests (already ran above)
- task: Maven@4
  displayName: 'Maven package'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.21'
    jdkArchitectureOption: 'x64'
    goals: 'package'
    options: '-e -DskipTests'

# Publish test results (always runs even if tests fail)
- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    testRunTitle: 'Integration Tests'
    failTaskOnFailedTests: true
    mergeTestResults: true
  condition: always()

# Publish the JAR file (only if tests pass)
- task: PublishBuildArtifacts@1
  displayName: 'Publish JAR'
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/target/Online-Booking-App-0.0.1-SNAPSHOT.jar'
    ArtifactName: 'badminton-booking-app'
    publishLocation: 'Container'
  condition: succeeded()